name: Deploy to S3

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write

env:
  NEXT_PUBLIC_API_USER: ${{ secrets.NEXT_PUBLIC_API_USER }}
  NEXT_PUBLIC_API_FAVORITE: ${{ secrets.NEXT_PUBLIC_API_FAVORITE }}
  NEXT_PUBLIC_API_IMAGES: ${{ secrets.NEXT_PUBLIC_API_IMAGES }}
  NEXT_PUBLIC_API_UPLOAD: ${{ secrets.NEXT_PUBLIC_API_UPLOAD }}
  NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
  NEXT_PUBLIC_PUBLISHER_ID: ${{ secrets.NEXT_PUBLIC_PUBLISHER_ID }}

jobs:
  build:

    # Ubuntuの最新版環境内で処理を実行することを指定
    runs-on: ubuntu-latest

    # フロントエンドのディレクトリをデフォルトに設定
    defaults:
      run:
        working-directory: frontend

    ############################ Backend ############################

    steps:
      # 公式のアクション「actions/checkout」実行してリポジトリをクローンしてくる
      - name: 📦 Get latest code
        uses: actions/checkout@v3

      # AWS IAM ユーザーから認証情報を取得する
      - name: 🔑 Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # デプロイする
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_NAME }}
          username: ${{ secrets.EC2_USER_NAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: cd /var/www && git fetch --prune && git checkout main && git pull origin main

    ############################ Frontend ############################

      # デバッグ
      - name: Debug
        run: |
          pwd
          echo ${{ secrets.NEXT_PUBLIC_GA_ID }}
          echo ${{ secrets.NEXT_PUBLIC_PUBLISHER_ID }}

      # Node.jsのバージョンを指定
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      
      # パッケージのインストール
      - name: Install dependencies
        run: npm install

      # Next.jsのビルド
      - name: Build with Next.js
        run: npm run build

      # S3にアップロード
      - name: Sync to S3
        run: aws s3 sync --exact-timestamps --delete ./out s3://${{ secrets.S3_BUCKET }}

      # CloudFrontのキャッシュを削除
      - name: Clear cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"